// GENERATED BY GEMINI
const path = require('path');
const { ConfigLoader } = require('./deal-aggregator/core/utils/config');
const { FacebookAPI } = require('./deal-aggregator/core/utils/facebook-api');

async function postPhotoTest() {
  console.log('üñºÔ∏è  FACEBOOK PHOTO POSTING TEST');
  console.log('================================\n');

  try {
    // Load environment configuration
    const env = ConfigLoader.loadEnvironment();
    
    // Validate Facebook configuration
    const fbConfigValid = ConfigLoader.validateFacebookConfig(env);
    
    if (!fbConfigValid) {
      console.log('‚ùå INVALID FACEBOOK CONFIGURATION\n');
      console.log('üìã REQUIRED SETUP STEPS:');
      console.log('1. Set valid FB_PAGE_ID in config/.env.local.json');
      console.log('2. Set valid FB_PAGE_ACCESS_TOKEN in config/.env.local.json');
      console.log('3. Ensure Page Access Token has permissions:');
      console.log('   - pages_manage_posts');
      console.log('   - pages_read_engagement'); 
      console.log('   - pages_show_list');
      console.log('   - pages_read_user_content');
      console.log('4. App must be in Live Mode (not Development Mode)');
      console.log('5. Token should be a Page Access Token (not User Access Token)\n');
      
      console.log('üí° QUICK TEST WITH PLACEHOLDER:');
      console.log('   Replace placeholder values in config/.env.local.json and run again');
      return;
    }

    console.log(`üìä Page ID: ${env.FB_PAGE_ID}`);
    console.log(`üîë Token: [${env.FB_PAGE_ACCESS_TOKEN.length} chars]`);
    console.log(`üñºÔ∏è  Photo: media/sample.jpg\n`);

    // Initialize API
    const facebookAPI = new FacebookAPI(env.FB_PAGE_ID, env.FB_PAGE_ACCESS_TOKEN);

    // Test credentials first
    console.log('STEP 1: Testing API Access...');
    const accessTest = await facebookAPI.testAccess();
    
    if (!accessTest.overall) {
      console.log('\n‚ùå API ACCESS FAILED');
      if (accessTest.error) {
        console.log(`Error: ${JSON.stringify(accessTest.error, null, 2)}`);
      }
      return;
    }

    // Test photo posting
    console.log('\nSTEP 2: Posting Sample Photo...');
    
    const photoPath = path.join(__dirname, 'media/sample.jpg');
    const caption = `üì∏ Facebook Photo Test - ${new Date().toISOString()}\n\nThis is a test photo posted via Graph API to verify media posting functionality.\n\n‚úÖ Post successful if you see this on your Facebook page.`;

    const photoResult = await facebookAPI.postPhoto({ photoPath, caption });

    if (photoResult.success) {
      console.log('\n‚úÖ PHOTO POSTED SUCCESSFULLY!');
      console.log(`üìù Post ID: ${photoResult.post_id || photoResult.postId}`);
      
      // Generate preview URLs
      const basePostId = photoResult.post_id || photoResult.postId;
      const previewUrl = `https://www.facebook.com/${basePostId}`;
      const pageUrl = `https://www.facebook.com/${env.FB_PAGE_ID}`;
      
      console.log(`üîó Direct Post URL: ${previewUrl}`);
      console.log(`üè† Page URL: ${pageUrl}`);
      console.log('\nüéâ Success! Check your Facebook page to confirm the photo is visible.');
      
    } else {
      console.log('\n‚ùå PHOTO POSTING FAILED');
      console.log(`Reason: ${photoResult.message}`);
      
      if (photoResult.error) {
        console.log('\nüìã API Error Details:');
        console.log(JSON.stringify(photoResult.error, null, 2));
        
        // Specific error guidance
        if (photoResult.error.error?.code === 10) {
          console.log('\nüö® PERMISSION ERROR - Required Actions:');
          console.log('- Check that your app has pages_manage_posts permission');
          console.log('- Ensure app is in Live Mode (not Development Mode)');
          console.log('- Verify token is a Page Access Token, not User Access Token');
        }
        
        if (photoResult.error.error?.code === 190) {
          console.log('\nüö® AUTHENTICATION ERROR - Required Actions:');
          console.log('- Token may be expired or invalid');
          console.log('- Generate new Page Access Token');
          console.log('- Ensure token has not been regenerated in Facebook Developer Console');
        }
      }
    }
    
  } catch (error) {
    console.log('\n‚ùå SCRIPT ERROR');
    console.log(`Error: ${error.message}`);
    console.log('\nüí° Make sure config/.env.local.json exists and is properly formatted.');
  }
}

// Execute
postPhotoTest().catch(console.error);