{
  "info": {
    "name": "DealRadarUS Auth API",
    "description": "Complete authentication system for DealRadarUS - User registration, login, email verification, password reset, and session management",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      },
      "response": []
    },
    {
      "name": "User Signup",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"{{testPassword}}\",\n  \"first_name\": \"Test\",\n  \"last_name\": \"User\",\n  \"newsletter_subscribed\": true\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/signup",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "signup"]
        }
      },
      "response": []
    },
    {
      "name": "User Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"{{testPassword}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "login"]
        },
        "description": "Login with email and password. Returns access token in response and sets httpOnly cookies."
      },
      "response": []
    },
    {
      "name": "Get Current User",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/auth/me",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "me"]
        },
        "description": "Get current user information. Requires authentication."
      },
      "response": []
    },
    {
      "name": "Refresh Access Token",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/refresh",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "refresh"]
        },
        "description": "Refresh access token using refresh token from httpOnly cookie."
      },
      "response": []
    },
    {
      "name": "Verify Email",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"token\": \"{{verificationToken}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/verify-email",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "verify-email"]
        },
        "description": "Verify email address using token from verification email."
      },
      "response": []
    },
    {
      "name": "Resend Verification Email",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{testEmail}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/resend-verification",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "resend-verification"]
        }
      },
      "response": []
    },
    {
      "name": "Forgot Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{testEmail}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/forgot-password",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "forgot-password"]
        },
        "description": "Request password reset. Sends reset link to user's email."
      },
      "response": []
    },
    {
      "name": "Reset Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"token\": \"{{resetToken}}\",\n  \"password\": \"{{newPassword}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/reset-password",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "reset-password"]
        },
        "description": "Reset password using token from reset email."
      },
      "response": []
    },
    {
      "name": "Change Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"current_password\": \"{{testPassword}}\",\n  \"new_password\": \"{{newPassword}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/change-password",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "change-password"]
        },
        "description": "Change password for authenticated user."
      },
      "response": []
    },
    {
      "name": "User Logout",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/logout",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "logout"]
        },
        "description": "Logout user. Clears cookies and invalidates refresh token."
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-generate test email if not set",
          "if (!pm.environment.get('testEmail')) {",
          "    const timestamp = Date.now();",
          "    const randomHex = Math.random().toString(16).substring(2, 8);",
          "    pm.environment.set('testEmail', `test-${timestamp}-${randomHex}@dealradarus.com`);",
          "}",
          "",
          "// Set default password if not set",
          "if (!pm.environment.get('testPassword')) {",
          "    pm.environment.set('testPassword', 'TestPass123!');",
          "}",
          "",
          "// Set default new password if not set",
          "if (!pm.environment.get('newPassword')) {",
          "    pm.environment.set('newPassword', 'NewTestPass123!');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Extract access token from login response",
          "if (pm.request.url.path.includes('login') && pm.response.code === 200) {",
          "    const responseJson = pm.response.json();",
          "    if (responseJson.success && responseJson.data.tokens.access_token) {",
          "        pm.environment.set('accessToken', responseJson.data.tokens.access_token);",
          "        console.log('Access token saved to environment');",
          "    }",
          "}",
          "",
          "// Extract new access token from refresh response",
          "if (pm.request.url.path.includes('refresh') && pm.response.code === 200) {",
          "    const responseJson = pm.response.json();",
          "    if (responseJson.success && responseJson.data.access_token) {",
          "        pm.environment.set('accessToken', responseJson.data.access_token);",
          "        console.log('Refreshed access token saved to environment');",
          "    }",
          "}",
          "",
          "// Clear access token on logout",
          "if (pm.request.url.path.includes('logout') && pm.response.code === 200) {",
          "    pm.environment.unset('accessToken');",
          "    console.log('Access token cleared from environment');",
          "}",
          "",
          "// Log response details",
          "console.log(`${pm.request.method} ${pm.request.url.path} - ${pm.response.code} ${pm.response.status}`);",
          "if (pm.response.code >= 400) {",
          "    console.log('Error response:', pm.response.text());",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "testEmail",
      "value": "",
      "type": "string"
    },
    {
      "key": "testPassword",
      "value": "TestPass123!",
      "type": "string"
    },
    {
      "key": "newPassword",
      "value": "NewTestPass123!",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "verificationToken",
      "value": "",
      "type": "string",
      "description": "Token from email verification (manual input required)"
    },
    {
      "key": "resetToken",
      "value": "",
      "type": "string",
      "description": "Token from password reset email (manual input required)"
    }
  ]
}