name: Production Readiness CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: ESLint Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint -- --no-fix --max-warnings 200

      - name: Lint summary
        if: always()
        run: |
          echo "## 🔍 ESLint Results" >> $GITHUB_STEP_SUMMARY
          if [ $? -eq 0 ]; then
            echo "✅ ESLint checks passed (≤200 warnings allowed)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ ESLint checks failed" >> $GITHUB_STEP_SUMMARY
            echo "Run \`npm run lint\` locally to see details" >> $GITHUB_STEP_SUMMARY
          fi

  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --ci --coverage --maxWorkers=2
        env:
          NODE_ENV: test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Test summary
        if: always()
        run: |
          echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          if [ $? -eq 0 ]; then
            echo "✅ All tests passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Tests failed" >> $GITHUB_STEP_SUMMARY
            echo "Run \`npm test\` locally to debug" >> $GITHUB_STEP_SUMMARY
          fi

  build:
    name: Production Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Check build size
        run: |
          BUILD_SIZE=$(du -sh .next | cut -f1)
          echo "📦 Build size: $BUILD_SIZE" >> $GITHUB_STEP_SUMMARY

      - name: Build summary
        if: always()
        run: |
          echo "## 🏗️  Build Results" >> $GITHUB_STEP_SUMMARY
          if [ $? -eq 0 ]; then
            echo "✅ Production build successful" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Build failed" >> $GITHUB_STEP_SUMMARY
            echo "Run \`npm run build\` locally to debug" >> $GITHUB_STEP_SUMMARY
          fi

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --audit-level=high --omit=dev
        continue-on-error: true

      - name: Security summary
        if: always()
        run: |
          echo "## 🔒 Security Audit" >> $GITHUB_STEP_SUMMARY
          if [ $? -eq 0 ]; then
            echo "✅ No high/critical vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️  Security vulnerabilities detected" >> $GITHUB_STEP_SUMMARY
            echo "Run \`npm audit\` locally for details" >> $GITHUB_STEP_SUMMARY
          fi

  summary:
    name: Production Readiness Summary
    runs-on: ubuntu-latest
    needs: [lint, test, build, security]
    if: always()

    steps:
      - name: Generate overall summary
        run: |
          echo "# 🎯 Production Readiness Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.lint.result }}" == "success" ]; then
            echo "| 🔍 ESLint | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🔍 ESLint | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "| 🧪 Tests | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🧪 Tests | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.build.result }}" == "success" ]; then
            echo "| 🏗️ Build | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🏗️ Build | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.security.result }}" == "success" ]; then
            echo "| 🔒 Security | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🔒 Security | ⚠️ Review needed |" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY

          # Overall verdict
          if [ "${{ needs.lint.result }}" == "success" ] && \
             [ "${{ needs.test.result }}" == "success" ] && \
             [ "${{ needs.build.result }}" == "success" ]; then
            echo "## ✅ **READY FOR PRODUCTION**" >> $GITHUB_STEP_SUMMARY
            echo "All critical checks passed. This build can be deployed." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ **NOT READY FOR PRODUCTION**" >> $GITHUB_STEP_SUMMARY
            echo "Critical checks failed. Please fix issues before deploying." >> $GITHUB_STEP_SUMMARY
          fi
